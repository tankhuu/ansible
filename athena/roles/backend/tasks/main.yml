---
# tasks file for backend
- name: Create the host security group
  ec2_group:
    name: "{{ ec2_sg_name }}"
    description: Security Group for new host
    region: "{{ ec2_region }}"
    vpc_id: "{{ vpc_id }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8090
        to_port: 8090
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8081
        to_port: 8081
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8100
        to_port: 8100
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8088
        to_port: 8088
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8095
        to_port: 8095
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8083
        to_port: 8083
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: launch the new ec2 instance
  ec2:
    vpc_subnet_id: "{{ vpc_subnet_id }}"
    group: "{{ ec2_sg_name }}"
    instance_type: "{{ ec2_instance_type }}"
    image: "{{ ec2_image }}"
    instance_profile_name: "{{ ec2_profile }}"
    wait: true
    region: "{{ ec2_region }}"
    keypair: "{{ ec2_keypair }}"
    count: 1
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: 15
        delete_on_termination: yes
    user_data: "{{ lookup('template', 'user_data.j2') }}"
    instance_tags:
      Name: edulogvn-athena-backend-base
  register: ec2

- name: wait for SSH to come up
  wait_for:
    host: "{{ item.public_ip }}"
    port: 22
    state: started
  with_items: "{{ ec2.instances }}"
# this is wait for user_data script run finished
